@model AcademiaEnVivo.Models.EventoModels

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<br />
<br />
<script src="~/Scripts/src/Cleave.js"></script>
<div>
    @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-success" })
</div>
<br />
<div class="panel">
    <div class="panel-heading">
        <div class="panel-title">Editar</div>
    </div>
    <div id="divedit" class="panel-body">

        <div class="panel">
            <div class="panel-heading">
                <div class="panel-title">Evento</div>
            </div>
            <div class="panel-body">

                @using (Html.BeginForm("Edit", "evento", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "formsend", @class = "panel-body col-md-10" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.id_evento)

                    <div class="col-md-12 form-group">
                        <div class="col-md-4 form-group">
                            <label for="grid-input-4">Categoria</label>
                            @Html.DropDownList("id_categoria", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.id_categoria, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-8 form-group">
                            <label for="grid-input-4">Nombre</label>
                            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                            <div id="em-nombre" class=""></div>
                        </div>
                    </div>
                    <div class="col-md-12 form-group">
                        <div class="col-md-12 form-group">
                            <label for="grid-input-4">Descripción</label>
                            @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12 form-group">
                        <div class="col-md-4 form-group">
                            <label for="grid-input-4">Fecha Evento</label>
                            @Html.EditorFor(model => model.fecha_evento, new { htmlAttributes = new { @class = "form-control datepicker", @autocomplete = "off", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.fecha_evento, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 form-group">
                            <label for="grid-input-4">Hora Desde</label>
                            <select class="form-control" name="hora_desde" id="hora_desde">
                                <option value="8:00 a. m.">08:00 AM</option>
                                <option value="8:30 a. m.">08:30 AM</option>
                                <option value="9:00 a. m.">09:00 AM</option>
                                <option value="9:30 a. m.">09:30 AM</option>
                                <option value="10:00 a. m.">10:00 AM</option>
                                <option value="10:30 a. m.">10:30 AM</option>
                                <option value="11:00 a. m.">11:00 AM</option>
                                <option value="11:30 a. m.">11:30 AM</option>
                                <option value="12:00 p. m.">12:00 PM</option>
                                <option value="12:30 p. m.">12:30 PM</option>
                                <option value="1:00 p. m.">01:00 PM</option>
                                <option value="1:30 p. m.">01:30 PM</option>
                                <option value="2:00 p. m.">02:00 PM</option>
                                <option value="2:30 p. m.">02:30 PM</option>
                                <option value="3:00 p. m.">03:00 PM</option>
                                <option value="3:30 p. m.">03:30 PM</option>
                                <option value="4:00 p. m.">04:00 PM</option>
                                <option value="4:30 p. m.">04:30 PM</option>
                                <option value="5:00 p. m.">05:00 PM</option>
                                <option value="5:30 p. m.">05:30 PM</option>
                                <option value="6:00 p. m.">06:00 PM</option>
                                <option value="6:30 p. m.">06:30 PM</option>
                            </select>
                            @*@Html.EditorFor(model => model.hora_desde, new { htmlAttributes = new { @class = "form-control timepicker", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.hora_desde, "", new { @class = "text-danger" })*@
                        </div>

                        <div class="col-md-4 form-group">
                            <label for="grid-input-4">Hora Hasta</label>
                            <select class="form-control" name="hora_hasta" id="hora_hasta">
                                <option value="8:00 a. m.">08:00 AM</option>
                                <option value="8:30 a. m.">08:30 AM</option>
                                <option value="9:00 a. m.">09:00 AM</option>
                                <option value="9:30 a. m.">09:30 AM</option>
                                <option value="10:00 a. m.">10:00 AM</option>
                                <option value="10:30 a. m.">10:30 AM</option>
                                <option value="11:00 a. m.">11:00 AM</option>
                                <option value="11:30 a. m.">11:30 AM</option>
                                <option value="12:00 p. m.">12:00 PM</option>
                                <option value="12:30 p. m.">12:30 PM</option>
                                <option value="1:00 p. m.">01:00 PM</option>
                                <option value="1:30 p. m.">01:30 PM</option>
                                <option value="2:00 p. m.">02:00 PM</option>
                                <option value="2:30 p. m.">02:30 PM</option>
                                <option value="3:00 p. m.">03:00 PM</option>
                                <option value="3:30 p. m.">03:30 PM</option>
                                <option value="4:00 p. m.">04:00 PM</option>
                                <option value="4:30 p. m.">04:30 PM</option>
                                <option value="5:00 p. m.">05:00 PM</option>
                                <option value="5:30 p. m.">05:30 PM</option>
                                <option value="6:00 p. m.">06:00 PM</option>
                                <option value="6:30 p. m.">06:30 PM</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-12 form-group">
                        <div class="col-md-4 form-group">
                            <label for="grid-input-4">Precio</label>
                            @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control input-numeral", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 form-group">
                            <label for="grid-input-4">Estado</label>
                            <select class="form-control" id="estado" name="estado">
                                <option selected="selected" value="true">Activo</option>
                                <option value="false">Inactivo</option>
                            </select>
                        </div>
                    </div>
                    @*<div class="col-md-12 form-group">
                            <label for="grid-input-4">Invitados</label>
                            @Html.TextAreaFor(model => model.invitados, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.invitados, "", new { @class = "text-danger" })
                        </div>*@

                    <div class="col-md-12 form-group">
                        <div class="col-md-10">
                        </div>
                        <div class="col-md-1">
                            <input type="submit" onclick="blockelement('#divedit')" value="Editar" class="btn btn-success" />
                        </div>
                        <div class="col-md-1">
                            <button type="button" class="btn btn-info" data-toggle="modal" data-target="#modal-large">
                                Invitados
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="modal fade" id="modal-large" tabindex="-1" style="display: none;">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">×</button>
                        <h4 class="modal-title">Invitados</h4>
                    </div>
                    <div class="modal-body">
                        <div class="col-md-12 form-group">
                            <div class="col-md-12">
                                <div class="panel-body">
                                    <div class="panel">
                                        <div class="panel-heading">
                                            <div class="panel-title">Agregar Invitados</div>
                                        </div>
                                        <div id="divaddinvitado" class="panel-body">

                                            @using (Html.BeginForm("AddInvitado", "evento", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "formsend", @class = "panel-body col-md-10" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                @Html.HiddenFor(model => model.id_evento)

                                                <div class="col-md-12 form-group">
                                                    <label for="grid-input-4">AGREGAR: UTILICE COMA (,) PARA SEPARAR LOS CORREOS ELECTRÓNICOS</label>
                                                    @Html.TextAreaFor(model => model.invitados, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.invitados, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-12 form-group">
                                                    <div class="col-md-10 form-group">
                                                    </div>
                                                    <div class="col-md-1 form-group">
                                                        <input type="submit" onclick="blockelement('#divaddinvitado')" value="Invitar" class="btn btn-success" />
                                                    </div>
                                                </div>
                                            }

                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div id="divinvitados" class="col-md-12">
                                <div class="table-primary">
                                    <div id="datatables_wrapper" class="dataTables_wrapper form-inline dt-bootstrap no-footer">

                                        <table class="table table-striped table-bordered dataTable no-footer" id="datatables" role="grid" aria-describedby="datatables_info">
                                            <thead>
                                                <tr role="row">
                                                    <th class="sorting_asc" tabindex="0" aria-controls="datatables" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending" style="width: 180px;">E-mail</th>
                                                    <th tabindex="0" style="width: 267px;">Re-Enviar Invitacion</th>
                                                    <th tabindex="0" style="width: 242px;">Eliminar</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.lista_invitados)
                                                {
                                                    <tr class="gradeU odd" id="@item.id" role="row">
                                                        <td class="sorting_1">
                                                            @Html.DisplayFor(modelItem => item.value)
                                                        </td>
                                                        <td>
                                                            <input type="button" value="Invitar" onclick="reinvitar('@item.id')" class="btn btn-success" />
                                                            @*@Html.ActionLink("Enviar", "Invitar", new { id = item.id, email = item.value }, new { @class = "btn btn-success" })*@
                                                        </td>
                                                        <td>
                                                            <input type="submit" value="Eliminar" onclick="confirmdelete('@item.id')" class="btn btn-danger" />
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/Scripts/EditEvento.js")
@if (Model.ShowError == true)
{
    <script>GeneralModal("@Model.title", "@Model.ErrorMessage", "@Model.type");</script>

    if (Model.Clean == true)
    {
        <script>Clean()</script>
    }
}

<script>
   document.getElementById("hora_desde").value = "@Model.hora_desde_string";
   document.getElementById("hora_hasta").value = "@Model.hora_hasta_string";

  var estado = "@Model.estado.ToString()";
  document.getElementById("estado").value = estado.toLowerCase();
</script>
<script>
                // -------------------------------------------------------------------------
                // Initialize DataTables


</script>


